<?php

namespace Container4ElTk0M;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getBackupDatabaseCommandService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Command\BackupDatabaseCommand' shared autowired service.
     *
     * @return \App\Command\BackupDatabaseCommand
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/console/Command/Command.php';
        include_once \dirname(__DIR__, 4).'/src/Command/BackupDatabaseCommand.php';
        include_once \dirname(__DIR__, 4).'/src/Service/BackupService.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/mailer/MailerInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/mailer/Mailer.php';

        $container->privates['App\\Command\\BackupDatabaseCommand'] = $instance = new \App\Command\BackupDatabaseCommand(new \App\Service\BackupService(($container->privates['parameter_bag'] ??= new \Symfony\Component\DependencyInjection\ParameterBag\ContainerBag($container)), ($container->privates['monolog.logger'] ?? self::getMonolog_LoggerService($container)), new \Symfony\Component\Mailer\Mailer(($container->privates['mailer.transports'] ?? $container->load('getMailer_TransportsService')), ($container->services['messenger.default_bus'] ?? self::getMessenger_DefaultBusService($container)), ($container->services['event_dispatcher'] ?? self::getEventDispatcherService($container)))));

        $instance->setName('app:backup-database');
        $instance->setDescription('Gère les sauvegardes de la base de données');

        return $instance;
    }
}
